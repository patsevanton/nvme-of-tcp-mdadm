#cloud-config
write_files:
  - path: "/usr/local/bin/startup.sh"
    permissions: "755"
    content: |
      #!/bin/bash

      curl -fsSL https://get.docker.com -o get-docker.sh
      sudo sh get-docker.sh
      sudo apt install nvme-cli mdadm -y
      
      # Load necessary kernel modules
      sudo modprobe nvme_tcp
      sudo modprobe nvmet
      sudo modprobe nvmet-tcp
      # Create partition
      echo -e "n\np\n1\n\n\nw" | fdisk /dev/vdb
      echo -e "n\np\n1\n\n\nw" | fdisk /dev/vdc
    defer: true
  - path: "/usr/local/bin/vdb1.sh"
    permissions: "755"
    content: |
      #!/bin/bash
      
      # Define variables for the IP address, NVMe device, and subsystem name
      IP_ADDRESS=$(ip addr show eth0 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)
      NVME_DEVICE="/dev/vdb1"
      SUBSYSTEM_NAME="vdb1"
      PORT_NUMBER="4420"
      TRTYPE="tcp"
      ADRFAM="ipv4"
      
      # Create the NVMe subsystem directory
      sudo mkdir -p /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME
      
      # Set the subsystem to accept any host
      echo 1 | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/attr_allow_any_host
      
      # Create and configure the namespace
      sudo mkdir -p /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1
      echo -n $NVME_DEVICE | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1/device_path
      echo 1 | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1/enable
      
      # Configure the NVMe-oF TCP port
      sudo mkdir -p /sys/kernel/config/nvmet/ports/1
      echo $IP_ADDRESS | sudo tee /sys/kernel/config/nvmet/ports/1/addr_traddr
      echo $TRTYPE | sudo tee /sys/kernel/config/nvmet/ports/1/addr_trtype
      echo $PORT_NUMBER | sudo tee /sys/kernel/config/nvmet/ports/1/addr_trsvcid
      echo $ADRFAM | sudo tee /sys/kernel/config/nvmet/ports/1/addr_adrfam
      
      # Link the subsystem to the port
      sudo ln -s /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME /sys/kernel/config/nvmet/ports/1/subsystems/$SUBSYSTEM_NAME
      
      echo "NVMe over Fabrics configuration is set up."
    defer: true
  - path: "/usr/local/bin/vdc1.sh"
    permissions: "755"
    content: |
      #!/bin/bash
      
      # Define variables for the IP address, NVMe device, and subsystem name
      IP_ADDRESS=$(ip addr show eth0 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)
      NVME_DEVICE="/dev/vdc1"
      SUBSYSTEM_NAME="vdc1"
      PORT_NUMBER="4421"
      TRTYPE="tcp"
      ADRFAM="ipv4"

      # Create the NVMe subsystem directory
      sudo mkdir -p /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME
      
      # Set the subsystem to accept any host
      echo 1 | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/attr_allow_any_host
      
      # Create and configure the namespace
      sudo mkdir -p /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1
      echo -n $NVME_DEVICE | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1/device_path
      echo 1 | sudo tee /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME/namespaces/1/enable
      
      # Configure the NVMe-oF TCP port
      sudo mkdir -p /sys/kernel/config/nvmet/ports/2
      echo $IP_ADDRESS | sudo tee /sys/kernel/config/nvmet/ports/2/addr_traddr
      echo $TRTYPE | sudo tee /sys/kernel/config/nvmet/ports/2/addr_trtype
      echo $PORT_NUMBER | sudo tee /sys/kernel/config/nvmet/ports/2/addr_trsvcid
      echo $ADRFAM | sudo tee /sys/kernel/config/nvmet/ports/2/addr_adrfam
      
      # Link the subsystem to the port
      sudo ln -s /sys/kernel/config/nvmet/subsystems/$SUBSYSTEM_NAME /sys/kernel/config/nvmet/ports/1/subsystems/$SUBSYSTEM_NAME
      
      echo "NVMe over Fabrics configuration is set up."
    defer: true
runcmd:
  - ["/usr/local/bin/startup.sh"]
